# system
check system $HOST
  if loadavg (5min) > 3 then alert
  if loadavg (15min) > 1 then alert
  if memory usage > 90% for 4 cycles then alert
  if swap usage > 60% for 4 cycles then alert
  # Test the user part of CPU usage
  if cpu usage (user) > 80% for 2 cycles then alert
  # Test the system part of CPU usage
  if cpu usage (system) > 20% for 2 cycles then alert
  # Test the i/o wait part of CPU usage
  if cpu usage (wait) > 80% for 2 cycles then alert
  # Test CPU usage including user, system and wait. Note that
  # multi-core systems can generate 100% per core
  # so total CPU usage can be more than 100%
  if cpu usage > 200% for 4 cycles then alert

# rsyslog
check process rsyslog with pidfile /run/rsyslogd.pid
  start program = "/usr/sbin/service rsyslog start"
  stop  program = "/usr/sbin/service rsyslog stop"

# rsyslog.syslog
check file rsyslog.syslog with path /var/log/syslog
  if timestamp > 65 minutes then alert

# haproxy
check process haproxy with pidfile /run/tmpfs/haproxy.pid
  start program = "/usr/sbin/haproxy -W -f /etc/haproxy/haproxy.cfg -p /run/tmpfs/haproxy.pid -S /run/haproxy-master.sock"
  stop  program = "/bin/bash -c '/bin/kill --signal SIGUSR1 `cat /run/tmpfs/haproxy.pid`'"

# spamassassin
check process spamassassin with pidfile /home/spamd/spamd.pid
  start program = "/usr/sbin/spamd -d --pidfile=/home/spamd/spamd.pid --create-prefs --max-children 5 --username spamd --helper-home-dir /home/spamd/ -s /home/spamd/spamd.log"
  stop  program = "/bin/bash -c '/bin/kill --signal SIGTERM `cat /home/spamd/spamd.pid`'"
  if cpu usage > 99% for 5 cycles then alert
  if mem usage > 99% for 5 cycles then alert

# spamassassin.update
check program spamassassin.update with path "/bin/bash -c '/usr/bin/sa-update && /bin/kill --signal SIGHUP `cat /home/spamd/spamd.pid`'"
  every "0-15 12-1 * * *"
  if changed status then alert

# opendkim
check process opendkim with pidfile /var/run/opendkim/opendkim.pid
  start program = "/usr/sbin/opendkim"
  stop  program = "/bin/bash -c '/bin/kill --signal SIGTERM `cat /var/run/opendkim/opendkim.pid`'"

# postfix
check process postfix with pidfile /var/spool/postfix/pid/master.pid
  start program = "/bin/bash -c '/usr/lib/postfix/configure-instance.sh - && /usr/sbin/postmulti -i - -p start'"
  stop  program = "/usr/sbin/postmulti -i - -p stop"
  if failed port 25 protocol smtp then restart

# dovecot
check process dovecot with pidfile /run/dovecot/master.pid
  start program = "/usr/sbin/dovecot"
  stop  program = "/usr/bin/doveadm stop"
  if failed host %<fqdn>s port 993 type tcpssl sslauto protocol imap for 5 cycles then restart

# certbot
check file certbot.fullchain with path /etc/letsencrypt/live/%<fqdn>s/fullchain.pem
  if changed checksum then exec "/bin/bash -c '/usr/sbin/postfix reload && /usr/sbin/dovecot reload'"
check file certbot.key with path /etc/letsencrypt/live/%<fqdn>s/key.pem
  if changed checksum then exec "/bin/bash -c '/usr/sbin/postfix reload && /usr/sbin/dovecot reload'"

# monit
check process monit with pidfile /var/run/tmpfs/monit.pid
  start program = "/usr/bin/monit"
  stop  program = "/usr/bin/monit quit"
